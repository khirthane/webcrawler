{"version":3,"sources":["images/sixt-logo.png","components/layout/logo.js","components/layout/header.js","components/pages/crawler/crawlerResults.js","components/pages/crawler/googleSearch.js","components/pages/crawler/index.js","App.js","reportWebVitals.js","index.js"],"names":["Logo","className","src","logo","width","alt","React","Component","Header","Fragment","intl","webCrawler","CrawlerResults","results","useState","searchResults","setSearchResults","getLinks","doc","dom","DOMParser","parseFromString","links","scripts","map","res","filter","url","match","Set","useEffect","Promise","all","resultItem","axios","get","link","then","list","r","resIndex","l","libIndex","libraries","data","loadLibraries","website","title","snippet","href","length","cacheId","GoogleSearch","searchResultsfn","searchText","setSearchText","searchtext","id","type","value","onChange","e","target","onClick","WebCrawler","googleResults","setGoogleResults","googleSearchResults","a","items","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb7a2a17.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/sixt-logo.f4a2803d.png\";","import React from 'react';\nimport './layout.scss'\nimport logo from '../../images/sixt-logo.png'\n\nclass Logo extends React.Component {\n\n    render() {\n        return (\n                <h1 className=\"logo\">\n                <img src={logo} width=\"100\" alt=\"Sixt Logo\"></img>\n                </h1>\n        )\n    }\n} \n\nexport default Logo;","import React from 'react';\nimport './layout.scss';\nimport Logo from './logo';\nimport intl from '../utils/locales/en.json';\n\nclass Header extends React.Component {\n\n    render() {\n        return (\n            <React.Fragment>\n                <header className=\"header\">\n                    <div className=\"logo-container\">\n                        <Logo />\n                    </div>\n                    <div className=\"title-container\">\n                        <h1 className=\"title\">{intl.webCrawler}</h1>\n                    </div>\n                </header>\n            </React.Fragment>\n        )\n    }\n} \n\nexport default Header;","import { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport './crawler.scss';\r\n\r\nconst CrawlerResults = ({ results }) => {\r\n\r\n    const corsurl = \"https://api.allorigins.win/raw?url=\";\r\n    const [searchResults, setSearchResults] = useState(\"\");\r\n\r\n    const loadLibraries = (res) => {\r\n        if (!!res) {\r\n            return Promise.all(res.map(resultItem => {\r\n                return axios.get(corsurl + resultItem.link)\r\n            })).then(list => {\r\n                res.map((r, resIndex) => {\r\n                    list.map((l, libIndex) => {\r\n                        if (resIndex === libIndex) {\r\n                            r.libraries = getLinks(l.data);\r\n                        }\r\n                    });\r\n                });\r\n                setSearchResults(res)\r\n            });\r\n        }\r\n    }\r\n\r\n    const getLinks = (doc) => {\r\n        const parser = new DOMParser();\r\n        const dom = parser.parseFromString(doc, \"text/html\");\r\n        const scripts = [...dom.scripts];\r\n        const links = scripts.map(res => res.src)\r\n            .filter(url => !!url)\r\n            .map(url => url.match(/^https?\\:\\/\\/([^\\/?#]+)(?:[\\/?#]|$)/i)[1]);\r\n        return [...new Set(links)]\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadLibraries(results);\r\n    }, [results])\r\n\r\n    return (\r\n        <div className=\"library-list container\">\r\n            {searchResults && searchResults.map(website => (\r\n                <div key={website.cacheId} className=\"row library-row\">\r\n                    <div className=\"col-6 library-site\">\r\n                        <h3>{website.title}</h3>\r\n                        <p>{website.snippet}</p>\r\n                        <a href={website.link}>{website.link}</a>\r\n                    </div>\r\n                    <div className=\"col-3 library-urls\">\r\n                        {website.libraries.map(url => (\r\n                            <li key={url}>{url}</li>\r\n                        ))\r\n                        }\r\n                    </div>\r\n                    <div className=\"col-3 count-container\">\r\n                        <span className=\"library-count\">{website.libraries.length}</span>\r\n                        <span className=\"library-no\">No of Libaries</span>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default CrawlerResults;","import React, {useState} from 'react';\r\nimport './crawler.scss';\r\nimport intl from '../../utils/locales/en.json';\r\n\r\nconst GoogleSearch = ({ searchResultsfn}) => {\r\n\r\n    const [searchText, setSearchText] = useState('');\r\n\r\n    return (\r\n        <>\r\n            <div className=\"crawler-container\">\r\n                <div className=\"crawler\">\r\n                    <p>{intl.searchtext}</p>\r\n                    <div className=\"search-container\">\r\n                        <input id=\"search-input\" className=\"search-input\" type=\"text\" value={searchText} onChange={(e) => setSearchText(e.target.value)}></input>\r\n                        <button className=\"search-btn\" onClick={() => searchResultsfn(searchText)}>Search</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GoogleSearch;","import React, { useState } from 'react';\r\nimport CrawlerResults from './crawlerResults';\r\nimport GoogleSearch from './googleSearch';\r\nimport axios from 'axios';\r\n\r\nconst WebCrawler = () => {\r\n\r\n    const data = [\r\n        {\r\n            \"kind\": \"customsearch#result\",\r\n            \"title\": \"Amazon.com: Online Shopping for Electronics, Apparel, Computers ...\",\r\n            \"htmlTitle\": \"<b>Amazon</b>.com: Online Shopping for Electronics, Apparel, Computers ...\",\r\n            \"link\": \"https://www.amazon.com/\",\r\n            \"displayLink\": \"www.amazon.com\",\r\n            \"snippet\": \"Free delivery on millions of items with Prime. Low prices across earth's biggest \\nselection of books, music, DVDs, electronics, computers, software, apparel ...\",\r\n            \"htmlSnippet\": \"Free delivery on millions of items with Prime. Low prices across earth&#39;s biggest <br>\\nselection of books, music, DVDs, electronics, computers, software, apparel&nbsp;...\",\r\n            \"cacheId\": \"U7u2aHWjLXIJ\",\r\n            \"formattedUrl\": \"https://www.amazon.com/\",\r\n            \"htmlFormattedUrl\": \"https://www.<b>amazon</b>.com/\"\r\n        },\r\n        {\r\n            \"kind\": \"customsearch#result\",\r\n            \"title\": \"Amazon Web Services (AWS) - Cloud Computing Services\",\r\n            \"htmlTitle\": \"<b>Amazon</b> Web Services (AWS) - Cloud Computing Services\",\r\n            \"link\": \"https://aws.amazon.com/\",\r\n            \"displayLink\": \"aws.amazon.com\",\r\n            \"snippet\": \"Amazon Web Services offers reliable, scalable, and inexpensive cloud \\ncomputing services. Free to join, pay only for what you use.\",\r\n            \"htmlSnippet\": \"<b>Amazon</b> Web Services offers reliable, scalable, and inexpensive cloud <br>\\ncomputing services. Free to join, pay only for what you use.\",\r\n            \"cacheId\": \"DQFYE7-PMXAJ\",\r\n            \"formattedUrl\": \"https://aws.amazon.com/\",\r\n            \"htmlFormattedUrl\": \"https://aws.<b>amazon</b>.com/\"\r\n\r\n        }\r\n    ]\r\n\r\n    const key = 'AIzaSyADW4EkYP50x0MO91rDQSi_XZmrqT6NQ6k';\r\n    const cse = '109df34b90543fb83';\r\n    const count = 5;\r\n\r\n    const [googleResults, setGoogleResults] = useState('');\r\n\r\n    const googleSearchResults = async (searchText) => {\r\n        const url = `https://www.googleapis.com/customsearch/v1/siterestrict?key=${key}&cx=${cse}&q=${searchText}&num=${count}`;\r\n        const results = await axios.get(url).then(res => res.data.items);\r\n        setGoogleResults(results)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <GoogleSearch searchResultsfn={googleSearchResults} />\r\n            <CrawlerResults results={googleResults} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default WebCrawler;","import './App.css';\nimport Header from './components/layout/header';\nimport WebCrawler from './components/pages/crawler';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <WebCrawler/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}